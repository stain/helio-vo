<?xml version="1.0" encoding="ISO-8859-1"?>

<web-app 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    	xmlns="http://java.sun.com/xml/ns/javaee" 
        xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
                             http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
        id="HELIO-security-example" 
        version="2.5">
         

    <display-name>Example of HELIO secured service</display-name>
    <description>A simple example for HELIO security.</description>

	<!-- Where Spring is to load its bean definitions from. -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
        	WEB-INF/secure.xml
        	classpath:application-context.xml
        </param-value>
    </context-param>

    <!-- Insert Spring Security into filter chain -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>
            org.springframework.web.filter.DelegatingFilterProxy
        </filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- General Spring hook -->
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>

	<!--  These lines are used by the apache servlet -->
    <servlet>
        <servlet-name>CXFServlet</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>
  
</web-app>
