// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.2_01, build R40)
// Generated source version: 1.1.2

package org.egso.comms.nds.types;

import java.util.ArrayList;
import java.util.List;

import javax.xml.namespace.QName;

import com.sun.xml.rpc.encoding.CombinedSerializer;
import com.sun.xml.rpc.encoding.DeserializationException;
import com.sun.xml.rpc.encoding.Initializable;
import com.sun.xml.rpc.encoding.InternalTypeMappingRegistry;
import com.sun.xml.rpc.encoding.SOAPDeserializationContext;
import com.sun.xml.rpc.encoding.SOAPSerializationContext;
import com.sun.xml.rpc.encoding.literal.LiteralObjectSerializerBase;
import com.sun.xml.rpc.streaming.XMLReader;
import com.sun.xml.rpc.streaming.XMLReaderUtil;
import com.sun.xml.rpc.streaming.XMLWriter;

public class ApplicationList_LiteralSerializer extends LiteralObjectSerializerBase implements Initializable  {
    private static final QName ns1_applications_QNAME = new QName("", "applications");
    private static final QName ns3_Application_TYPE_QNAME = new QName("urn:org.egso.comms/nds/types/", "Application");
    private CombinedSerializer ns3_myApplication_LiteralSerializer;
    
    public ApplicationList_LiteralSerializer(QName type, String encodingStyle) {
        this(type, encodingStyle, false);
    }
    
    public ApplicationList_LiteralSerializer(QName type, String encodingStyle, boolean encodeType) {
        super(type, true, encodingStyle, encodeType);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns3_myApplication_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", org.egso.comms.nds.types.Application.class, ns3_Application_TYPE_QNAME);
    }
    
    public Object doDeserialize(XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        org.egso.comms.nds.types.ApplicationList instance = new org.egso.comms.nds.types.ApplicationList();
        Object member=null;
        QName elementName;
        List values;
        Object value;
        
        reader.nextElementContent();
        elementName = reader.getName();
        if ((reader.getState() == XMLReader.START) && (elementName.equals(ns1_applications_QNAME))) {
            values = new ArrayList();
            for(;;) {
                elementName = reader.getName();
                if ((reader.getState() == XMLReader.START) && (elementName.equals(ns1_applications_QNAME))) {
                    value = ns3_myApplication_LiteralSerializer.deserialize(ns1_applications_QNAME, reader, context);
                    if (value == null) {
                        throw new DeserializationException("literal.unexpectedNull");
                    }
                    values.add(value);
                    reader.nextElementContent();
                } else {
                    break;
                }
            }
            member = new org.egso.comms.nds.types.Application[values.size()];
            member = values.toArray((Object[]) member);
            instance.setApplications((org.egso.comms.nds.types.Application[])member);
        }
        else {
            instance.setApplications(new org.egso.comms.nds.types.Application[0]);
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (Object)instance;
    }
    
    public void doSerializeAttributes(Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        org.egso.comms.nds.types.ApplicationList instance = (org.egso.comms.nds.types.ApplicationList)obj;
        
    }
    public void doSerialize(Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        org.egso.comms.nds.types.ApplicationList instance = (org.egso.comms.nds.types.ApplicationList)obj;
        
        if (instance.getApplications() != null) {
            for (int i = 0; i < instance.getApplications().length; ++i) {
                ns3_myApplication_LiteralSerializer.serialize(instance.getApplications()[i], ns1_applications_QNAME, null, writer, context);
            }
        }
    }
}
